# Generated by Django 5.2.6 on 2025-10-12 22:57

import django.db.models.deletion
import django.utils.timezone
import main_app.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('bursary', '0001_initial'),
        ('college', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('department', models.CharField(choices=[('Admissions', 'Admissions'), ('Finance', 'Finance'), ('HR', 'Human Resources'), ('Academics', 'Academics'), ('Advertisement', 'Advertisements'), ('Sponsor', 'Sponsors'), ('Project', 'Projects'), ('Other', 'Others')], max_length=50)),
                ('message', models.TextField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_names', models.CharField(max_length=255)),
                ('gmail', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('message_box', models.TextField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=100)),
                ('owner', models.CharField(max_length=100)),
                ('pdf', models.FileField(upload_to='store/pdfs/')),
                ('cover', models.ImageField(upload_to='store/pdfs/')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewsAndEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('summary', models.TextField(blank=True, max_length=2000, null=True)),
                ('posted_as', models.CharField(choices=[('News', 'News'), ('Event', 'Event')], max_length=10)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('upload_time', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(default='default.png', null=True, upload_to='news_images/%y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prospectors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('copy', models.FileField(upload_to='store/prospectors/')),
                ('logo', models.ImageField(upload_to='store/prospectors/')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.DateField()),
                ('end_year', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermsOfUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[(1, 'HOD'), (2, 'Staff'), (3, 'Student'), (4, 'Principal'), (5, 'Educator'), (6, 'Circuit_Manager'), (7, 'Parent'), (8, 'Member'), (9, 'CWA_Admin')], default=1, max_length=1)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('profile_pic', models.ImageField(upload_to='')),
                ('address', models.TextField()),
                ('fcm_token', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', main_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Circuit_Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circuit', models.CharField(max_length=120)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=20, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(upload_to='Ads/')),
                ('video', models.FileField(blank=True, null=True, upload_to='Ads/videos/', validators=[main_app.models.validate_video_size])),
                ('web_url', models.URLField()),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, null=True)),
                ('facebook_url', models.CharField(blank=True, max_length=300, null=True)),
                ('tiktok_url', models.CharField(blank=True, max_length=300, null=True)),
                ('zoom_url', models.CharField(blank=True, max_length=900, null=True)),
                ('microsoftTeam_url', models.CharField(blank=True, max_length=900, null=True)),
                ('location', models.CharField(blank=True, max_length=900, null=True)),
                ('twitter_url', models.CharField(blank=True, max_length=900, null=True)),
                ('playstore_url', models.CharField(blank=True, max_length=900, null=True)),
                ('linkedin_url', models.CharField(blank=True, max_length=900, null=True)),
                ('instagram_url', models.CharField(blank=True, max_length=900, null=True)),
                ('pinterest_url', models.CharField(blank=True, max_length=900, null=True)),
                ('youtube_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('share_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.member')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='main_app.message')),
            ],
        ),
        migrations.CreateModel(
            name='MessageMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.FileField(upload_to='message_media/')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='main_app.message')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emis', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(choices=[('DJUNANE', 'DJUNANE'), ('ELIM', 'ELIM'), ('HLALELANI', 'HLALELANI'), ('KETLANI', 'KETLANI'), ('MAHONISI', 'MAHONISI'), ('MASINDI', 'MASINDI'), ('MASUNGULO', 'MASUNGULO'), ('MULWELI', 'MULWELI'), ('MUNZHEDZI', 'MUNZHEDZI'), ('MUTHUHADINI', 'MUTHUHADINI'), ('NKHENSA', 'NKHENSA'), ('RIVONI', 'RIVONI'), ('SHIHLOBYENI', 'SHIHLOBYENI'), ('SHIRLEY', 'SHIRLEY'), ('TRUE_LIFE', 'TRUE_LIFE'), ('TSAKANI', 'TSAKANI'), ('TSHIMONELA', 'TSHIMONELA'), ('TSHIISAPHUNGO', 'TSHIISAPHUNGO'), ('VALDEZIA', 'VALDEZIA'), ('HS_PHILLIPS', 'HS PHILLIPS'), ('LEMANA', 'LEMANA'), ('DR.T.G_Neluvhola_Training_Academy', 'DR.T.G_Neluvhola_Training_Academy'), ('MDR', 'MDR'), ('OZIAS_DAVHANA', 'OZIAS DAVHANA'), ('RIVUBYE', 'RIVUBYE'), ('TSHIAWELO', 'TSHIAWELO'), ('WATERVAL', 'WATERVAL'), ('OTHER', 'OTHER')], default='OTHER', max_length=255)),
                ('contact', models.CharField(max_length=255)),
                ('phase', models.CharField(blank=True, max_length=255, null=True)),
                ('sector', models.CharField(blank=True, max_length=255, null=True)),
                ('educators_on_db', models.IntegerField(default=0)),
                ('school_type', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=255)),
                ('school_term', models.IntegerField(default=0)),
                ('filter_by', models.CharField(choices=[('Region', 'Region'), ('Phase', 'Phase')], default='Region', max_length=255)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(default=2025)),
                ('count', models.IntegerField(default=0)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('head_principal', models.CharField(blank=True, max_length=255, null=True)),
                ('deputy', models.CharField(blank=True, max_length=255, null=True)),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.grade')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.school'),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.school')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.session'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.grade')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.session')),
            ],
        ),
        migrations.CreateModel(
            name='SosCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SosCategory',
                'verbose_name_plural': 'SosCategories',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.course')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=60)),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.course')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.grade')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.school')),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.session')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=60)),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.attendance')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='main_app.course')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.grade')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment', models.FloatField(default=0)),
                ('test', models.FloatField(default=0)),
                ('exam', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Sos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('date', models.CharField(blank=True, max_length=20, null=True)),
                ('assessment', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject')),
            ],
            options={
                'verbose_name': 'Sos',
                'verbose_name_plural': 'soss',
            },
        ),
        migrations.CreateModel(
            name='InformalStudentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('informaltest', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.subject'),
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_name', models.CharField(blank=True, choices=[('Term 1', 'Term 1'), ('Term 2', 'Term 2'), ('Term 3', 'Term 3'), ('Term 4', 'Term 4')], max_length=10)),
                ('is_current', models.BooleanField(default=False)),
                ('activity_description', models.CharField(blank=True, max_length=120)),
                ('next_term_begins', models.DateField(blank=True, null=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.session')),
            ],
        ),
        migrations.CreateModel(
            name='Principal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.course')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.grade')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.school')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.term')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('mother', 'Mother'), ('father', 'Father'), ('guardian', 'Guardian'), ('other', 'Other')], default='other', max_length=10)),
                ('employment_status', models.CharField(blank=True, choices=[('employed', 'Employed'), ('unemployed', 'Unemployed'), ('self_employed', 'Self-employed'), ('retired', 'Retired'), ('other', 'Other')], max_length=20, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('education_level', models.CharField(blank=True, choices=[('none', 'No formal education'), ('primary', 'Primary education'), ('secondary', 'Secondary education'), ('tertiary', 'Tertiary education'), ('postgraduate', 'Postgraduate education')], max_length=20, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.school')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.session')),
                ('student', models.ManyToManyField(related_name='parents', to='main_app.student')),
                ('term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.term')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='term',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.term'),
        ),
        migrations.CreateModel(
            name='Educator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.course')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.grade')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.school')),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.session')),
                ('subjects', models.ManyToManyField(to='main_app.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.term')),
            ],
        ),
        migrations.CreateModel(
            name='CWA_Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=20, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bursary', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bursary.bursary')),
                ('collegeanduniversity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='college.collegeanduniversities')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.school')),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.session')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.term')),
            ],
        ),
        migrations.CreateModel(
            name='Textbook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='textbooks/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.grade')),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_timetables', to=settings.AUTH_USER_MODEL)),
                ('educators', models.ManyToManyField(to='main_app.educator')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.grade')),
                ('subjects', models.ManyToManyField(to='main_app.subject')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=7)),
                ('overall_performance', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('num_evaluations', models.IntegerField(default=1)),
                ('improvement', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('educator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.educator')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.grade')),
                ('school_principal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.principal')),
                ('school_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.school')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject')),
            ],
            options={
                'unique_together': {('school_record', 'session', 'subject', 'grade')},
            },
        ),
    ]
